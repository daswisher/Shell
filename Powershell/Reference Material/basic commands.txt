>>>System Management
System states can be controlled by providing specific lines of commands. (I.e. shutdown, lock, standby, hibernate).

Shutting down the computer:
stop-computer

Lock computer:
rundll32.exe user32.dll, LockWorkStation

Restart computer:
restart-computer


>>>Process management on computer

There are a number of different commands used in powershell that are similar to bash.
The first set are get commands:
get-service <<This returns all services active and inactive
get-process <<This returns only running process along with process info

Ex: get-process waterfox <<Returns info like pid, usage, etc
stop-process <<Used to kill process, but you have to use pid instead of process name
kill <<This is the same as stop-process/service
***If you want to kill a process using the name instead of the PID, add -process name in between the command and the process name***
Ex: we want to kill notepad, we'd use the following
kill -processname notepad
start-process <<Starts a process, but you use process name instead of pid


>>>System navigation

Navigation commands are a hybrid of bash and cmd:
ls <<list directory contents
dir <<is the same thing as ls
cd << change directory
	cd .. << goes back one level
	cd / <<goes to root directory
<tab key> << auto complete
***In order to deal with files that have a spaces in their name, use a typeset apostrophe instead of a tick 
mark***

For instance, we need to navigate into a directory that has a space in the name "my documents", we would use the 
following command:
cd my` documents

Alternatively, in order to deal with spaces, it is possible to wrap the entire name in quotes to treat it as a 
string. The entire path would have to be wrapped and not just the folder. 

Example: We want to create a directory called "my stuff"
mkdir "my stuff"

Example 2: There is the folder "my documents" within the folder "stuff"
cd ".\stuff\my documents"


>>>Creation and deletion

There are also a series of commands that are similar to bash commands for creation and deletion:
mkdir <<makes a directory
rmdir <<deletes a directory
echo $null > <file name> <<same as the touch command to make empty files
<<<<<rm on a directory that has children will prompt for recursive delete>>>>>


>>>Escalating user privilages 
By default, powershell runs as a non-administer profile to add a mild level of protection for the system from the user. Although, it is commonly needed to have admin privilages to do things like installations or unlock/lock encrypted drives. In order to open a new terminal window with admin privilages, type the following command:
start-process powershell -verb runAs


>>>Account Management
Accounts can be changed or modified only at an administrator level. To change
a password, issue the following:
net user usernameHere * /saidUsersDomain
Example: net user Administrator *
Alternative...
net user usernameHere newPasswordHere


>>>BitLocker Management
Windows comes with a drive encryption application called BitLocker. While it works well on drives/volumes (spanned volumes included), it does have some issues like the fact that it isn't possible to relock drives from the gui. There are a few commands that make using a cli to manage bitlocker over gui's though.

Locking a Volume:
manage-bde -lock <drive>:
Example: manage-bde -lock C: <<<This would lock the C drive provided that it was a drive encrypted by BitLocker

Unlocking a Volume:
manage-bde -unlock <drive>: -password <<<This can only be done from an admin privilage and will prompt the user for the password after execution
Example: manage-bde -lock C: -password
thisIsAPassword
